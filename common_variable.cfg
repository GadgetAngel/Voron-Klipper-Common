# [gcode_macro DISPLAY_FEATURES]
# description: Show all features and their enabled states
# gcode:
#   {% set auto_z_offset = printer['gcode_macro _USER_VARIABLE'].auto_z_offset|lower %}
#   {% set bed_mesh = printer['gcode_macro _USER_VARIABLE'].bed_mesh|lower %}
#   {% set beeper = printer.save_variables.variables.beeper|default("false")|lower %}
#   {% set case_lights = printer['gcode_macro _USER_VARIABLE'].case_lights|lower %}
#   {% set chamber_sensor = printer['gcode_macro _USER_VARIABLE'].chamber_sensor|lower %}
#   {% set debug = printer.save_variables.variables.debug|default("false")|lower %}
#   {% set display_lights = printer['gcode_macro _USER_VARIABLE'].display_lights|lower %}
#   {% set exhaust_fan = printer['gcode_macro _USER_VARIABLE'].exhaust_fan|lower %}
#   {% set frame_sensor = printer['gcode_macro _USER_VARIABLE'].frame_sensor|lower %}
#   {% set nevermore_fan = printer['gcode_macro _USER_VARIABLE'].nevermore_fan|lower %}
#   {% set nozzle_clean = printer.save_variables.variables.nozzle_clean|default("false")|lower %}
#   {% set nozzle_purge = printer.save_variables.variables.nozzle_purge|default("false")|lower %}
#   {% set probe_type = printer['gcode_macro _USER_VARIABLE'].probe_type|lower %}
#   {% set quad_gantry_level = printer['gcode_macro _USER_VARIABLE'].quad_gantry_level|lower %}
#   {% set toolhead_sensor = printer['gcode_macro _USER_VARIABLE'].toolhead_sensor|lower %}

#   {action_respond_info('==== DISPLAY_FEATURES ====')}
#   {action_respond_info("auto_z_offset: %s" % (auto_z_offset))}
#   {action_respond_info("bed_mesh: %s" % (bed_mesh))}
#   {action_respond_info("beeper: %s" % (beeper))}
#   {action_respond_info("case_lights: %s" % (case_lights))}
#   {action_respond_info("chamber_sensor: %s" % (chamber_sensor))}
#   {action_respond_info("debug: %s" % (debug))}
#   {action_respond_info("display_lights: %s" % (display_lights))}
#   {action_respond_info("exhaust_fan: %s" % (exhaust_fan))}
#   {action_respond_info("frame_sensor: %s" % (frame_sensor))}
#   {action_respond_info("nevermore_fan: %s" % (nevermore_fan))}
#   {action_respond_info("nozzle_clean: %s" % (nozzle_clean))}
#   {action_respond_info("nozzle_purge: %s" % (nozzle_purge))}
#   {action_respond_info("probe_type: %s" % (probe_type))}
#   {action_respond_info("quad_gantry_level: %s" % (quad_gantry_level))}
#   {action_respond_info("toolhead_sensor: %s" % (toolhead_sensor))}
#   {action_respond_info('===============')}

# [gcode_macro TOGGLE_DEBUG]
# description: Toggle the printer beeper on and off.
# gcode:
# 	{% set ena_debug = printer.save_variables.variables.debug|lower %}

# 	{% if ena_debug == "true" %}
# 		{action_respond_info('==== TOGGLE_DEBUG ====')}
# 		{action_respond_info("ena_debug: %s" % (ena_debug))}
# 		{action_respond_info('===============')}
# 	{% endif %}

# 	{% if ena_debug == "false" %}
# 		{action_respond_info('debug is off, turning it on')}
# 		SAVE_VARIABLE VARIABLE=debug VALUE='"true"'
# 	{% else %}
# 		{action_respond_info('debug is on, turning it off')}
# 		SAVE_VARIABLE VARIABLE=debug VALUE='"false"'
# 	{% endif %}
# 	SONG_SINGLE_BEEP
    
[gcode_macro _COMMON_VARIABLE]
description: Helper: Contains common macro defined variables
variable_debug: 'false' ; Enable debug logging
##### Filament #####
variable_extruder_min_add: 40   ; Temperature add to min Extruder temp
variable_load_distance : 45 ; load distance while load filament
variable_load_extrude : 80  ; extrude distance while load filament
variable_unload_distance : 95   ; unload distance while unload filament
variable_unretract_start: 9  ; retract distance at PRINT_END or CANCEL_PRINT
variable_retract_pause: 10   ; retract/extrude distance while PAUSE or RESUME
gcode:
