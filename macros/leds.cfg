######################
#     LED Macros     #
######################
# [gcode_macro _INIT_LED_COLORS_ARRAY]
# description: Initial led colors array
# gcode:
#     # features
#     {% set ena_debug = printer.save_variables.variables.debug|default("false")|lower %}

#     {% if ena_debug == "true" %}
#         {action_respond_info("==== _INIT_LED_COLORS_ARRAY ====")}
#     {% endif %}

#     {% if not printer.save_variables.variables.led_colors_array %}
#         {% set array = namespace(output = "") %}
#         {% set element = "[('red',1.0,0,0,0),('orange',1.0,0.43,0,0),('green',0,1.0,0,0),('blue',0,0,1.0,0),('white',1.0,1.0,1.0,0),('yellow',1.0,1.0,0,0),('purple',1.0,0,1.0,0),('off',0,0,0,0)]" %}
#         {% set array.output = array.output +  element %}
#         SAVE_VARIABLE VARIABLE=led_colors_array VALUE="{array.output}"
#     {% else %}
#         {action_respond_info("LED Colors array already exists")}
#     {% endif %}

[gcode_macro LIST_LED_COLORS]
description: List all LED colors
gcode:
    # command params
    {% set debug = params.DEBUG|default(0)|int %}
    # features
    {% set ena_debug = printer.save_variables.variables.debug|default("false")|lower %}

    {% if ena_debug == "true" or debug == 1 %}
        {action_respond_info("==== LIST_LED_COLORS ====")}
    {% endif %}

    {% if not printer.save_variables.variables.led_colors_array %}
        {action_respond_info("No LED colors array defined, running '_INIT_LED_COLORS_ARRAY'")}
        _INIT_LED_COLORS_ARRAY
    {% else %}
        {% set array = namespace(output = "") %}
        {% set led_colors = printer.save_variables.variables.led_colors_array %}
        {% set elem_count = led_colors|length %}
        {% set element = "Colors:" %}
        {% set array.output = array.output + element + "\n"%}
        {% for index in range(elem_count) %}
            {% set element = "%-10s [R: %01.2f, G: %01.2f, B: %01.2f, W: %01.2f]" %
                (led_colors[index][0], led_colors[index][1], led_colors[index][2], led_colors[index][3], led_colors[index][4]) %}
            {% set array.output = array.output + element + "\n"%}
        {% endfor %}
        {action_respond_info("%s" % (array.output))}
    {% endif %}


[gcode_macro _SET_LEDS]
description: Set neopixel led values by index.
gcode:
    # command params
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = params.LED|string %}
    {% set index = (params.INDEX|string).split(',') %}
    {% set transmit_last = params.TRANSMIT|default(1) %}
    {% set debug = params.DEBUG|default(0)|int %}
    # variables
    # features
    {% set ena_debug = printer.save_variables.variables.debug|default("false")|lower %}

    {% if ena_debug == "true" or debug == 1 %}
        {action_respond_info("===== _SET_LEDS =====")}
        {action_respond_info("[red: '%s', green: '%s', blue: '%s', white: '%s']" % (red,green,blue,white))}
        {action_respond_info("led: '%s'" % (led))}
        {action_respond_info("index: '%s'" % (index))}
        {action_respond_info("transmit_last: '%s'" % (transmit_last))}
        {action_respond_info("===============")}
    {% endif %}

    {% for led_index in index %}
        {% set transmit=transmit_last if loop.last else 0 %}
        SET_LED LED={led} RED={red} GREEN={green} BLUE={blue} WHITE={white} INDEX={led_index} TRANSMIT={transmit}
    {% endfor %}

[gcode_macro _SET_LED_STATE_BY_NAME]
description: Set neopixel leds to a color based on a state name, if no LED is defined all leds will be set.
gcode:
    # command params
    {% set led_name = params.LED %}
    {% set state_name = params.STATE %}
    {% set transmit = params.TRANSMIT|default(1) %}
    {% set debug = params.DEBUG|default(0)|int %}
    # variables
    {% set neopixel_leds = printer["gcode_macro _PRINTER_VARIABLE"].neopixel_leds %}
    {% set neopixel_led = neopixel_leds[led_name] %}
    # features
    {% set ena_debug = printer.save_variables.variables.debug|default("false")|lower %}

    {% if ena_debug == "true" or debug == 1 %}
        {action_respond_info("===== _SET_LED_STATE_BY_NAME =====")}
        {action_respond_info("led_name: '%s'" % (led_name))}
        {action_respond_info("state_name: '%s'" % (state_name))}
        {action_respond_info("neopixel_leds: '%s'" % (neopixel_leds))}
        {action_respond_info("transmit: '%s'" % (transmit))}
        {action_respond_info("===============")}
    {% endif %}

    {% if led_name and not neopixel_led %}
        {% set array = namespace(output = "") %}
        {% set element = "Unknown LED '%s'. Defined leds are:" % (led_name) %}
        {% set array.output = array.output + element + "\n"%}
        {% for name, neopixel_led in neopixel_leds.items() %}
            {% set element = "'%s' " % (name) %}
            {% set array.output = array.output + element %}
        {% endfor %}
        {action_respond_info("%s" % (array.output))}
    {% elif led_name and neopixel_led %}
        {% set neopixel_state = neopixel_led.states[state_name] %}
        {% if neopixel_state %}
            _SET_LEDS LED={neopixel_led.name} RED={neopixel_state.r} GREEN={neopixel_state.g} BLUE={neopixel_state.b} WHITE={neopixel_state.w} INDEX="{neopixel_led.index}" TRANSMIT={transmit} DEBUG={debug}
        {% endif %}
    {% else %}
        {% for led_name, neopixel_led in neopixel_leds.items() %}
            {% set neopixel_state = neopixel_led.states[state_name] %}
            {% if neopixel_state %}
                _SET_LEDS LED={neopixel_led.name} RED={neopixel_state.r} GREEN={neopixel_state.g} BLUE={neopixel_state.b} WHITE={neopixel_state.w} INDEX="{neopixel_led.index}" TRANSMIT={transmit} DEBUG={debug}
            {% endif %}
        {% endfor %}
    {% endif %}

[gcode_macro _SET_LED_COLOR_BY_NAME]
description: Set neopixel leds to a color based.
gcode:
    # command params
    {% set led_name = params.LED %}
    {% set color_name = params.COLOR %}
    {% set transmit = params.TRANSMIT|default(1) %}
    {% set debug = params.DEBUG|default(0)|int %}
    # variables
    {% set neopixel_leds = printer["gcode_macro _PRINTER_VARIABLE"].neopixel_leds %}
    {% set neopixel_led = neopixel_leds[led_name] %}
    {% set neopixel_colors = printer["gcode_macro _PRINTER_VARIABLE"].neopixel_colors %}
    {% set neopixel_color = neopixel_colors[color_name] %}
    # features
    {% set ena_debug = printer.save_variables.variables.debug|default("false")|lower %}

    {% if ena_debug == "true" or debug == 1 %}
        {action_respond_info("===== _SET_LED_COLOR_BY_NAME =====")}
        {action_respond_info("led_name: '%s'" % (led_name))}
        {action_respond_info("color_name: '%s'" % (color_name))}
        {action_respond_info("transmit: '%s'" % (transmit))}
        {action_respond_info("neopixel_leds: '%s'" % (neopixel_leds))}
        {action_respond_info("neopixel_led: '%s'" % (neopixel_led))}
        {action_respond_info("neopixel_colors: '%s'" % (neopixel_colors))}
        {action_respond_info("===============")}
    {% endif %}

    {% if not neopixel_color %}
        {% set array = namespace(output = "") %}
        {% set element = "Unknown COLOR '%s'. Defined colors are:" % (color_name) %}
        {% set array.output = array.output + element + "\n"%}
        {% for name, neopixel_color in neopixel_colors.items() %}
            {% set element = "'%s' " % (name) %}
            {% set array.output = array.output + element %}
        {% endfor %}
        {action_respond_info("%s" % (array.output))}
    {% elif led_name and not neopixel_led %}
        {% set array = namespace(output = "") %}
        {% set element = "Unknown LED '%s'. Defined leds are:" % (led_name) %}
        {% set array.output = array.output + element + "\n"%}
        {% for name, neopixel_led in neopixel_leds.items() %}
            {% set element = "'%s' " % (name) %}
            {% set array.output = array.output + element %}
        {% endfor %}
        {action_respond_info("%s" % (array.output))}
    {% elif led_name and neopixel_led %}
        {% if neopixel_led and neopixel_color %}
            _SET_LEDS LED={neopixel_led.name} RED={neopixel_color.r} GREEN={neopixel_color.g} BLUE={neopixel_color.b} WHITE={neopixel_color.w} INDEX="{neopixel_led.index}" TRANSMIT={transmit} DEBUG={debug}
        {% endif %}
    {% else %}
        {% for led_name, neopixel_led in neopixel_leds.items() %}
            _SET_LEDS LED={neopixel_led.name} RED={neopixel_color.r} GREEN={neopixel_color.g} BLUE={neopixel_color.b} WHITE={neopixel_color.w} INDEX="{neopixel_led.index}" TRANSMIT={transmit} DEBUG={debug}
        {% endfor %}
    {% endif %}

# [gcode_macro SET_LED_COLOR]
# description: Set the case/display LED color with a color name or R/G/B/W values. This command supports 'uc1701' and 'sh1106' displays.
# gcode:
#     {% set ns = namespace() %}
#     # command params
#     {% set ns.r = params.R|default(0)|float %}
#     {% set ns.g = params.G|default(0)|float %}
#     {% set ns.b = params.B|default(0)|float %}
#     {% set ns.w = params.W|default(0)|float %}
#     {% set case = params.CASE|default(1)|int %}
#     {% set display = params.DISPLAY|default(1)|int %}
#     {% set display_knob = params.DISPLAY_KNOB|default(1)|int %}
#     {% set debug = params.DEBUG|default(0)|int %}
#     # variables
#     {% set display_lcd_type = printer["gcode_macro _PRINTER_VARIABLE"].display_lcd_type|lower %}
#     # features
#     {% set ena_debug = printer.save_variables.variables.debug|default("false")|lower %}
#     {% set ena_display_lights = printer["gcode_macro _COMMON_VARIABLE"].display_lights|lower %}
#     {% set ena_case_lights = printer["gcode_macro _COMMON_VARIABLE"].case_lights|lower %}

#     {% if 'NAME' in params %}
#         {% set name = params.NAME|lower %}
#         {% set array = namespace(output = "") %}
#         {% set led_colors = printer.save_variables.variables.led_colors_array %}
#         {% set elem_count = led_colors|length %}
#         {% for index in range(elem_count) %}
#             {% if led_colors[index][0] == name %}
#                 {% set ns.r = led_colors[index][1]|float %}
#                 {% set ns.g = led_colors[index][2]|float %}
#                 {% set ns.b = led_colors[index][3]|float %}
#                 {% set ns.w = led_colors[index][4]|float %}
#             {% endif %}
#         {% endfor %}
#     {% endif %}

#     {% if ena_debug == "true" or debug == 1 %}
#         {action_respond_info("==== SET_LED_COLOR ====")}
#         {action_respond_info("features [display_lights: '%s', case_lights: '%s']" % (ena_display_lights,ena_case_lights))}
#         {action_respond_info("[r: '%s', g: '%s', b: '%s', w: '%s']" % (ns.r,ns.g,ns.b,ns.w))}
#         {action_respond_info("name: '%s'" % (name))}
#         {action_respond_info("case: '%s'" % (case))}
#         {action_respond_info("display: '%s'" % (display))}
#         {action_respond_info("display_knob: '%s'" % (display_knob))}
#         {action_respond_info("display_lcd_type: '%s'" % (display_lcd_type))}
#         {action_respond_info("===============")}
#     {% endif %}

#     {% if ena_display_lights == "true"%}
#         {% if display == 1 %}
#             {% if display_lcd_type == "uc1701" %}
#                 SET_LED LED=display_lights RED={ns.r} GREEN={ns.g} BLUE={ns.b} WHITE={ns.w} INDEX=2
#                 SET_LED LED=display_lights RED={ns.r} GREEN={ns.g} BLUE={ns.b} WHITE={ns.w} INDEX=1 TRANSMIT=1
#             {% elif display_lcd_type == "sh1106" %}
#                 SET_LED LED=display_lights RED={ns.r} GREEN={ns.g} BLUE={ns.b} WHITE={ns.w} TRANSMIT=1
#             {% endif %}
#         {% endif %}
#         {% if display_knob == 1 %}
#             {% if display_lcd_type == "uc1701" %}
#                 SET_LED LED=display_lights RED={ns.r} GREEN={ns.g} BLUE={ns.b} WHITE={ns.w} INDEX=3 TRANSMIT=1
#             {% elif display_lcd_type == "sh1106" %}
#                 SET_LED LED=display_lights RED={ns.r} GREEN={ns.g} BLUE={ns.b} WHITE={ns.w} TRANSMIT=1
#             {% endif %}
#         {% endif %}
#         {% if ena_case_lights == "true" %}
#             {% if case == 1  %}
#                 SET_LED LED=case_lights RED={ns.r} GREEN={ns.g} BLUE={ns.b} WHITE={ns.w} TRANSMIT=1
#             {% endif %}
#         {% endif %}
#         _LED_PAUSE DEBUG={debug}
#     {% endif %}

[gcode_macro _LED_PAUSE]
description: Pause for 1 second and let LED commands finish.
gcode:
    # command params
    {% set duration = params.DURATION|default(1000)|int %}
    {% set debug = params.DEBUG|default(0)|int %}
    # features
    {% set ena_debug = printer.save_variables.variables.debug|default("false")|lower %}

    {% if ena_debug == "true" or debug == 1 %}
        {action_respond_info("==== _LED_PAUSE ====")}
        {action_respond_info("duration: '%s'" % (duration))}
        {action_respond_info("===============")}
    {% endif %}
    M400
    G4 P{duration}
