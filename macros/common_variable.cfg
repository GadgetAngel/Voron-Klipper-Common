[gcode_macro DISPLAY_COMMON_FEATURES]
description: Show all common macro features
gcode:
    ##### Detect hardware #####
    {% set auto_z_offset = printer['gcode_macro _COMMON_VARIABLE'].auto_z_offset|lower %}
    {% set bed_mesh = printer['gcode_macro _COMMON_VARIABLE'].bed_mesh|lower %}
    {% set bed_screws = printer['gcode_macro _COMMON_VARIABLE'].bed_screws|lower %}
    {% set beeper_pin = printer['gcode_macro _COMMON_VARIABLE'].beeper_pin|lower %}
    {% set case_lights = printer['gcode_macro _COMMON_VARIABLE'].case_lights|lower %}
    {% set chamber_sensor = printer['gcode_macro _COMMON_VARIABLE'].chamber_sensor|lower %}
    {% set display_lights = printer['gcode_macro _COMMON_VARIABLE'].display_lights|lower %}
    {% set ercf_toolhead_sensor = printer['gcode_macro _COMMON_VARIABLE'].ercf_toolhead_sensor|lower %}
    {% set exhaust_fan = printer['gcode_macro _COMMON_VARIABLE'].exhaust_fan|lower %}
    {% set frame_sensor = printer['gcode_macro _COMMON_VARIABLE'].frame_sensor|lower %}
    {% set nevermore_fan = printer['gcode_macro _COMMON_VARIABLE'].nevermore_fan|lower %}
    {% set probe_type = printer['gcode_macro _COMMON_VARIABLE'].probe_type|lower %}
    {% set quad_gantry_level = printer['gcode_macro _COMMON_VARIABLE'].quad_gantry_level|lower %}
    ##### Features #####
    {% set adaptive_bed_mesh = printer.save_variables.variables.adaptive_bed_mesh|default('false')|lower %}
    {% set beeper = printer.save_variables.variables.beeper|default('true')|lower %}
    {% set nozzle_clean = printer.save_variables.variables.nozzle_clean|default("false")|lower %}
    {% set nozzle_purge = printer.save_variables.variables.nozzle_purge|default("false")|lower %}

    {action_respond_info('======= Detected Hardware =======')}
    {action_respond_info("auto_z_offset: %s" % (auto_z_offset))}
    {action_respond_info("bed_mesh: %s" % (bed_mesh))}
    {action_respond_info("bed_screws: %s" % (bed_screws))}
    {action_respond_info("beeper_pin: %s" % (beeper_pin))}
    {action_respond_info("case_lights: %s" % (case_lights))}
    {action_respond_info("chamber_sensor: %s" % (chamber_sensor))}
    {action_respond_info("display_lights: %s" % (display_lights))}
    {action_respond_info("ercf_toolhead_sensor: %s" % (ercf_toolhead_sensor))}
    {action_respond_info("exhaust_fan: %s" % (exhaust_fan))}
    {action_respond_info("frame_sensor: %s" % (frame_sensor))}
    {action_respond_info("nevermore_fan: %s" % (nevermore_fan))}
    {action_respond_info("probe_type: %s" % (probe_type))}
    {action_respond_info("quad_gantry_level: %s" % (quad_gantry_level))}
    {action_respond_info('=========== Features ============')}
    {action_respond_info("adaptive_bed_mesh: %s" % (adaptive_bed_mesh))}
    {action_respond_info("beeper: %s" % (beeper))}
    {action_respond_info("nozzle_clean: %s" % (nozzle_clean))}
    {action_respond_info("nozzle_purge: %s" % (nozzle_purge))}
    {action_respond_info('=================================')}

[delayed_gcode init_common_variable]
initial_duration: 0.5
gcode:
    _COMMON_VARIABLE

[gcode_macro _COMMON_VARIABLE]
description: Helper: Contains common macro variables
variable_auto_z_offset: 'flexplate' ; flexplate/z_calib depends what is found in cfg
variable_bed_mesh: 'false'          ; true is bed_mesh is found in cfg
variable_bed_screws: 'false'        ; true is bed_mesh is found in cfg
variable_beeper_pin: 'false'        ; true is output_pin beeper is found in cfg
variable_case_lights: 'false'       ; true is neopixel case_lights found in cfg
variable_chamber_sensor: 'false'    ; true is temperature_sensor chamber found in cfg
variable_display_lights: 'false'    ; true is neopixel display_lights found in cfg
variable_ercf_toolhead_sensor: 'false'   ; true is ercf toolhead_sensor found in cfg
variable_exhaust_fan: 'false'       ; true is fan_generic exhaust_fan found in cfg
variable_frame_sensor: 'false'      ; true is temperature_sensor frame found in cfg
variable_nevermore_fan: 'false'     ; true is fan_generic nevermore_fan found in cfg
variable_probe_type: 'unknown'      ; unknown/dockable/static what type of probe found in cfg
variable_quad_gantry_level: 'false' ; true is quad_gantry_level found in cfg
gcode:
    ##### DETECT HARDWARE #####
    {% if 'z_calibration' in printer.configfile.settings %}
        SET_GCODE_VARIABLE MACRO=_COMMON_VARIABLE VARIABLE=auto_z_offset VALUE='"z_calib"'
    {% else %}
        SET_GCODE_VARIABLE MACRO=_COMMON_VARIABLE VARIABLE=auto_z_offset VALUE='"flexplate"'
    {% endif %}
    {% if 'bed_mesh' in printer.configfile.settings %}
        SET_GCODE_VARIABLE MACRO=_COMMON_VARIABLE VARIABLE=bed_mesh VALUE='"true"'
    {% endif %}
    {% if 'bed_screws' in printer.configfile.settings %}
        SET_GCODE_VARIABLE MACRO=_COMMON_VARIABLE VARIABLE=bed_screws VALUE='"true"'
    {% endif %}
    {% if 'output_pin beeper' in printer.configfile.settings %}
        SET_GCODE_VARIABLE MACRO=_COMMON_VARIABLE VARIABLE=beeper_pin VALUE='"true"'
    {% endif %}
    {% if 'neopixel case_lights' in printer.configfile.settings %}
        SET_GCODE_VARIABLE MACRO=_COMMON_VARIABLE VARIABLE=case_lights VALUE='"true"'
    {% endif %}
    {% if 'temperature_sensor chamber' in printer.configfile.settings %}
        SET_GCODE_VARIABLE MACRO=_COMMON_VARIABLE VARIABLE=chamber_sensor VALUE='"true"'
    {% endif %}
    {% if 'neopixel display_lights' in printer.configfile.settings %}
        SET_GCODE_VARIABLE MACRO=_COMMON_VARIABLE VARIABLE=display_lights VALUE='"true"'
    {% endif %}
    {% if 'filament_switch_sensor ercf_toolhead_sensor' in printer.configfile.settings %}
        SET_GCODE_VARIABLE MACRO=_COMMON_VARIABLE VARIABLE=ercf_toolhead_sensor VALUE='"true"'
    {% endif %}
    {% if 'fan_generic exhaust_fan' in printer.configfile.settings %}
        SET_GCODE_VARIABLE MACRO=_COMMON_VARIABLE VARIABLE=exhaust_fan VALUE='"true"'
    {% endif %}
     {% if 'temperature_sensor frame' in printer.configfile.settings %}
        SET_GCODE_VARIABLE MACRO=_COMMON_VARIABLE VARIABLE=frame_sensor VALUE='"true"'
    {% endif %}
    {% if 'fan_generic nevermore_fan' in printer.configfile.settings %}
        SET_GCODE_VARIABLE MACRO=_COMMON_VARIABLE VARIABLE=nevermore_fan VALUE='"true"'
    {% endif %}
    {% if 'dockable_probe' in printer.configfile.settings %}
        SET_GCODE_VARIABLE MACRO=_COMMON_VARIABLE VARIABLE=probe_type VALUE='"dockable"'
    {% elif 'probe' in printer.configfile.settings %}
        SET_GCODE_VARIABLE MACRO=_COMMON_VARIABLE VARIABLE=probe_type VALUE='"static"'
    {% endif %}
    {% if 'quad_gantry_level' in printer.configfile.settings %}
        SET_GCODE_VARIABLE MACRO=_COMMON_VARIABLE VARIABLE=quad_gantry_level VALUE='"true"'
    {% endif %}
    