#######################################
#       Toolhead Parking Macros       #
#######################################
[gcode_macro PARK_FRONT]
description: Park head front high
gcode:
    # command params
    {% set debug = params.DEBUG|default(0)|int %}
    # variables
    {% set z_max_delta = printer["gcode_macro _PRINTER_VARIABLE"].z_max_delta|default(40)|int %}
    {% set boarder_delta = printer["gcode_macro _PRINTER_VARIABLE"].boarder_delta|default(20)|int %}
    {% set park_speed = printer["gcode_macro _PRINTER_VARIABLE"].park_speed|default(18000)|int %}
    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set min_y = printer.toolhead.axis_minimum.y|float %}
    {% set park_x = max_x / 2 %}
    {% set park_y = min_y + boarder_delta %}
    {% set park_z = max_z - z_max_delta %}
    # features
    {% set ena_debug = printer.save_variables.variables.debug|default("false")|lower %}

    {% if ena_debug == "true" or debug == 1 %}
        {action_respond_info("==== PARK_FRONT ====")}
        {action_respond_info("delta [z_max: '%s', boarder: '%s']" % (z_max_delta,boarder_delta))}
        {action_respond_info("park_speed: '%s'" % (park_speed))}
        {action_respond_info("max: [x: '%s', z: '%s']" % (max_x,max_z))}
        {action_respond_info("min: [y: '%s']" % (min_y))}
        {action_respond_info("park: [z: '%s', y: '%s', z: '%s']" % (park_x,park_y,park_z))}
        {action_respond_info("===============")}
    {% endif %}

    PARK X={park_x} Y={park_y} Z={park_z} PARK_SPEED={park_speed} DEBUG={debug}

[gcode_macro PARK_FRONT_MID]
description: Park head front middle
gcode:
    # command params
    {% set debug = params.DEBUG|default(0)|int %}
    # variables
    {% set boarder_delta = printer["gcode_macro _PRINTER_VARIABLE"].boarder_delta|default(20)|int %}
    {% set park_speed = printer["gcode_macro _PRINTER_VARIABLE"].park_speed|default(18000)|int %}
    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set min_y = printer.toolhead.axis_minimum.y|float %}
    {% set park_x = max_x / 2 %}
    {% set park_y = min_y + boarder_delta %}
    {% set park_z = max_z / 2 %}
    # features
    {% set ena_debug = printer.save_variables.variables.debug|default("false")|lower %}

    {% if ena_debug == "true" or debug == 1 %}
        {action_respond_info("==== PARK_FRONT_MID ====")}
        {action_respond_info("delta [boarder: '%s']" % (boarder_delta))}
        {action_respond_info("park_speed: '%s'" % (park_speed))}
        {action_respond_info("max: [x: '%s', z: '%s']" % (max_x,max_z))}
        {action_respond_info("min: [y: '%s']" % (min_y))}
        {action_respond_info("park: [z: '%s', y: '%s', z: '%s']" % (park_x,park_y,park_z))}
        {action_respond_info("===============")}
    {% endif %}

    PARK X={park_x} Y={park_y} Z={park_z} PARK_SPEED={park_speed} DEBUG={debug}

[gcode_macro PARK_FRONT_LOW]
description: Park head front low
gcode:
    # command params
    {% set debug = params.DEBUG|default(0)|int %}
    # variables
    {% set z_max_delta = printer["gcode_macro _PRINTER_VARIABLE"].z_max_delta|default(40)|int %}
    {% set boarder_delta = printer["gcode_macro _PRINTER_VARIABLE"].boarder_delta|default(20)|int %}
    {% set park_speed = printer["gcode_macro _PRINTER_VARIABLE"].park_speed|default(18000)|int %}
    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set min_y = printer.toolhead.axis_minimum.y|float %}
    {% set park_x = max_x / 2 %}
    {% set park_y = min_y + boarder_delta %}
    {% set park_z = z_max_delta %}
    # features
    {% set ena_debug = printer.save_variables.variables.debug|default("false")|lower %}

    {% if ena_debug == "true" or debug == 1 %}
        {action_respond_info("==== PARK_FRONT_LOW ====")}
        {action_respond_info("delta [z_max: '%s', boarder: '%s']" % (z_max_delta,boarder_delta))}
        {action_respond_info("park_speed: '%s'" % (park_speed))}
        {action_respond_info("max: [x: '%s']" % (max_x))}
        {action_respond_info("min: [y: '%s']" % (min_y))}
        {action_respond_info("park: [z: '%s', y: '%s', z: '%s']" % (park_x,park_y,park_z))}
        {action_respond_info("===============")}
    {% endif %}

    PARK X={park_x} Y={park_y} Z={park_z} PARK_SPEED={park_speed} DEBUG={debug}

[gcode_macro PARK_CENTER]
description: Park head middle of printer
gcode:
    # command params
    {% set debug = params.DEBUG|default(0)|int %}
    # variables
    {% set park_speed = printer["gcode_macro _PRINTER_VARIABLE"].park_speed|default(18000)|int %}
    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set max_y = printer.toolhead.axis_maximum.y|float %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set park_x = max_x / 2 %}
    {% set park_y = max_y / 2 %}
    {% set park_z = max_z / 2 %}
    # features
    {% set ena_debug = printer.save_variables.variables.debug|default("false")|lower %}

    {% if ena_debug == "true" or debug == 1 %}
        {action_respond_info("==== PARK_CENTER ====")}
        {action_respond_info("park_speed: '%s'" % (park_speed))}
        {action_respond_info("max: [x: '%s',y: '%s',z: '%s']" % (max_x,max_y,max_z))}
        {action_respond_info("park: [z: '%s', y: '%s', z: '%s']" % (park_x,park_y,park_z))}
        {action_respond_info("===============")}
    {% endif %}

    PARK X={park_x} Y={park_y} Z={park_z} PARK_SPEED={park_speed} DEBUG={debug}

[gcode_macro PARK_BED]
description: Park head middle of bed low
gcode:
    # command params
    {% set debug = params.DEBUG|default(0)|int %}
    # variables
    {% set z_min_delta = printer["gcode_macro _PRINTER_VARIABLE"].z_min_delta|default(30)|int %}
    {% set park_speed = printer["gcode_macro _PRINTER_VARIABLE"].park_speed|default(18000)|int %}
    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set max_y = printer.toolhead.axis_maximum.y|float %}
    {% set park_x = max_x / 2 %}
    {% set park_y = max_y / 2 %}
    {% set park_z = z_min_delta %}
    # features
    {% set ena_debug = printer.save_variables.variables.debug|default("false")|lower %}

    {% if ena_debug == "true" or debug == 1 %}
        {action_respond_info("==== PARK_BED ====")}
        {action_respond_info("delta [z_min: '%s']" % (z_min_delta))}
        {action_respond_info("park_speed: '%s'" % (park_speed))}
        {action_respond_info("max: [x: '%s', y: '%s']" % (max_x,max_y))}
        {action_respond_info("park: [z: '%s', y: '%s', z: '%s']" % (park_x,park_y,park_z))}
        {action_respond_info("===============")}
    {% endif %}

    PARK X={park_x} Y={park_y} Z={park_z} PARK_SPEED={park_speed} DEBUG={debug}

[gcode_macro PARK_REAR]
description: Park head rear high
gcode:
    # command params
    {% set debug = params.DEBUG|default(0)|int %}
    # variables
    {% set boarder_delta = printer["gcode_macro _PRINTER_VARIABLE"].boarder_delta|default(20)|int %}
    {% set z_max_delta = printer["gcode_macro _PRINTER_VARIABLE"].z_max_delta|default(40)|int %}
    {% set park_speed = printer["gcode_macro _PRINTER_VARIABLE"].park_speed|default(18000)|int %}
    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set max_y = printer.toolhead.axis_maximum.y|float %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set park_x = max_x / 2 %}
    {% set park_y = max_y - boarder_delta %}
    {% set park_z = max_z - z_max_delta %}
    # features
    {% set ena_debug = printer.save_variables.variables.debug|default("false")|lower %}

    {% if ena_debug == "true" or debug == 1 %}
        {action_respond_info("==== PARK_REAR ====")}
        {action_respond_info("delta [z_max: '%s', boarder: '%s']" % (z_max_delta,boarder_delta))}
        {action_respond_info("park_speed: '%s'" % (park_speed))}
        {action_respond_info("max: [x: '%s', y: '%s',, z: '%s']" % (max_x,max_y,max_z))}
        {action_respond_info("park: [z: '%s', y: '%s', z: '%s']" % (park_x,park_y,park_z))}
        {action_respond_info("===============")}
    {% endif %}

    PARK X={park_x} Y={park_y} Z={park_z} PARK_SPEED={park_speed} DEBUG={debug}

[gcode_macro PARK]
description: Park Head
gcode:
    # command params
    {% set x = params.X|default(0)|float %}
    {% set y = params.Y|default(0)|float %}
    {% set z = params.Z|default(0)|float %}
    {% set debug = params.DEBUG|default(0)|int %}
    # variables
    {% set park_speed = printer["gcode_macro _PRINTER_VARIABLE"].park_speed|default(18000)|int %}
    # features
    {% set ena_debug = printer.save_variables.variables.debug|default("false")|lower %}

    {% if ena_debug == "true" or debug == 1 %}
        {action_respond_info("==== PARK ====")}
        {action_respond_info("[z: '%s', y: '%s', z: '%s']" % (park_x,park_y,park_z))}
        {action_respond_info("park_speed: '%s'" % (park_speed))}
        {action_respond_info("===============")}
    {% endif %}

    SAVE_GCODE_STATE NAME=STATE_PARK
    _CG28 # Home if not already homed
    G90 # absolute positioning
    G0 X{x} Y{y} Z{z} F{park_speed}
    RESTORE_GCODE_STATE NAME=STATE_PARK
